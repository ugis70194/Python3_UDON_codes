[NQ:=list(map(int,input().split())),[uf.unite(PAB[1],PAB[2]) if PAB[0]==0 else uf.same(PAB[1],PAB[2]) for uf in [type("UnionFind",(),{"__init__":(lambda self,N:setattr(self,"par", [i for i in range(0, N)])),"find":(lambda self,x: self.par[x] if x!=self.par[x] and self.par.__setitem__(x,self.find(self.par[x])) else self.par[x]),"unite":(lambda self,x,y: self.par.__setitem__(self.find(y),self.find(x))),"same":(lambda self,x,y:print("YNeos"[self.par[self.find(x)]!=self.par[self.find(y)]::2]))})(NQ[0])] for _ in range(0, NQ[1]) for PAB in [list(map(int, input().split()))]]]